require 'pp'
require 'activerecord'
require 'active_record/connection_adapters/neverblock_mysql_adapter'

cs = ActiveRecord::Base::ConnectionSpecification.new({:adapter=>"neverblock_mysql", :database=>"meown_development", :username=>"root", :password=>"root", :server=>"localhost", :pool => 2}, "neverblock_mysql_connection")

cp = ActiveRecord::ConnectionAdapters::ConnectionPool.new cs

f1 = Fiber.new {puts cp.connection.object_id; Fiber.yield; cp.release_connection}
f2 = Fiber.new {puts cp.connection.object_id; Fiber.yield; cp.release_connection}
f3 = Fiber.new {puts cp.connection.object_id; Fiber.yield; cp.release_connection}

f1.resume
f2.resume
f3.resume
f1.resume
f3.resume


---------------------------------------
require 'pp'
require 'activerecord'
require 'active_record/connection_adapters/neverblock_mysql_adapter'

ActiveRecord::Base.establish_connection :adapter => "neverblock_mysql", :database => "meown_development", :username => "root", :password => "root", :server => "localhost"
#ActiveRecord::Base.establish_connection :adapter => "mysql", :database => "meown_development", :username => "root", :password => "root", :server => "localhost"

ActiveRecord::Base.connection

---------------------------------------

require 'pp'
require 'neverblock'
require 'eventmachine'
require 'activerecord'
require 'active_record/connection_adapters/neverblock_mysql_adapter'

ActiveRecord::Base.establish_connection :adapter => "neverblock_mysql", :database => "meown_development", :username => "root", :password => "root", :server => "localhost", :pool => 5

class User < ActiveRecord::Base
end

fp = NB::Pool::FiberPool.new 20

EM.run do
  t = Time.now
  ids = []
  20.times do |i|
    fp.spawn do
      #puts ActiveRecord::Base.connection.execute "select sleep(2)"
      #puts ">>>>>#{User.first(:offset =>i).email}"
      puts User.connection.object_id
      ids << User.connection.object_id
      puts "ids.length:#{ids.length} ids.uniq.length:#{ids.uniq.length}"      
      pool_stat = ""
      ["@fiber_queue", "@reserved_connections", "@connections", "@checked_out"].each do |v|
        pool_stat << "#{v} #{ActiveRecord::Base.connection_pool.instance_variable_get(v).length}"
      end
      puts pool_stat
      ActiveRecord::Base.clear_active_connections!
    end
  end
  puts "Duration #{Time.now - t}"
end
